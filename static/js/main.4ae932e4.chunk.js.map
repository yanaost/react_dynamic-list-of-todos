{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectTodoHadler","className","map","todo","id","completed","title","type","onClick","TodoFilter","status","setStatus","searchTerm","setSearchTerm","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","closeHadler","useState","user","setUser","useEffect","userId","userFromServer","href","email","name","App","loading","setLoading","setSelectedTodo","filteredTodo","setFilteredTodo","copyTodos","length","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ae932e4.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo [],\n  selectedTodo: Todo | null,\n  selectTodoHadler: (todo:Todo)=>void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, selectedTodo, selectTodoHadler },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodoHadler(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={\n                      selectedTodo && todo.id === selectedTodo.id\n                        ? 'far fa-eye-slash'\n                        : 'far fa-eye'\n                    }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  status: string,\n  setStatus: (status: string) => void,\n  searchTerm: string,\n  setSearchTerm: (search: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    status, setStatus, searchTerm, setSearchTerm,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {searchTerm\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                aria-label=\"Clear\"\n                className=\"delete\"\n                onClick={() => {\n                  setStatus('All');\n                  setSearchTerm('');\n                }}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null,\n  closeHadler: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeHadler }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then((userFromServer) => setUser(userFromServer));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeHadler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n\nlet todos: Todo [] = [];\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filteredTodo, setFilteredTodo] = useState<Todo []>([]);\n  const [status, setStatus] = useState('All');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const selectTodoHadler = (todo:Todo) => setSelectedTodo({ ...todo });\n  const clearCurrentTodo = () => setSelectedTodo(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setFilteredTodo)\n      .then(() => {\n        todos = filteredTodo.map((todo: Todo) => ({ ...todo }));\n      })\n      .then(() => setLoading(false));\n  }, []);\n\n  const filterHandler = () => {\n    let copyTodos = todos.map((todo: Todo) => ({ ...todo }));\n\n    if (searchTerm.length > 0) {\n      copyTodos = copyTodos.filter((todo:Todo) => todo.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    switch (status) {\n      case 'active':\n        copyTodos = copyTodos.filter((todo:Todo) => !todo.completed);\n        break;\n\n      case 'completed':\n        copyTodos = copyTodos.filter((todo:Todo) => todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    setFilteredTodo(copyTodos);\n  };\n\n  useEffect(filterHandler, [searchTerm, status]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                setStatus={setStatus}\n                searchTerm={searchTerm}\n                setSearchTerm={setSearchTerm}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodo}\n                    selectedTodo={selectedTodo}\n                    selectTodoHadler={selectTodoHadler}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            closeHadler={clearCurrentTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}